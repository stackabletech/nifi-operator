---
apiVersion: authentication.stackable.tech/v1alpha1
kind: AuthenticationClass
metadata:
  name: broken-nifi-users
spec:
  provider:
    static:
      userCredentialsSecret:
        name: broken-nifi-admin-credentials
---
apiVersion: v1
kind: Secret
metadata:
  name: broken-nifi-admin-credentials
stringData:
  admin: supersecretpassword
---
apiVersion: v1
kind: Secret
metadata:
  name: nifi-sensitive-property-key
stringData:
  nifiSensitivePropsKey: mYsUp3rS3cr3tk3y
---
apiVersion: nifi.stackable.tech/v1alpha1
kind: NifiCluster
metadata:
  name: test-nifi
spec:
  image:
{% if test_scenario['values']['nifi_old'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['nifi_old'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['nifi_old'].split(',')[0] }}"
{% else %}
    custom: null
    productVersion: "{{ test_scenario['values']['nifi_old'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  clusterConfig:
    authentication:
      - authenticationClass: broken-nifi-users
    sensitiveProperties:
      keySecret: nifi-sensitive-property-key
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
    zookeeperConfigMapName: test-nifi-znode
  nodes:
    config:
      gracefulShutdownTimeout: 1m
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        config: {}
        replicas: 3
