---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: keycloak
{% if test_scenario['values']['openshift'] == 'true' %}
rules:
- apiGroups: ["security.openshift.io"]
  resources: ["securitycontextconstraints"]
  resourceNames: ["privileged"]
  verbs: ["use"]
{% endif %}
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: keycloak
subjects:
  - kind: ServiceAccount
    name: keycloak
roleRef:
  kind: Role
  name: keycloak
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: keycloak-tls-$NAMESPACE
spec:
  backend:
    autoTls:
      ca:
        autoGenerate: true
        secret:
          name: keycloak-tls-ca-$NAMESPACE
          namespace: $NAMESPACE
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      serviceAccountName: keycloak
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:25.0.0
          args:
            - start-dev
            - --import-realm
{% if test_scenario['values']['oidc-use-tls'] == 'true' %}
            - --https-certificate-file=/tls/tls.crt
            - --https-certificate-key-file=/tls/tls.key
{% endif %}
          env:
            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: admin
            - name: JAVA_OPTS_KC_HEAP
              value: -Xmx500M
{% if test_scenario['values']['oidc-use-tls'] == 'true' %}
          ports:
            - name: https
              containerPort: 8443
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /realms/master
              port: https
{% else %}
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /realms/master
              port: http
{% endif %}
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 500m
              memory: 1024Mi
          volumeMounts:
            - name: data
              mountPath: /opt/keycloak/data/
            - name: tls
              mountPath: /tls/
            - name: realm-volume
              mountPath: /opt/keycloak/data/import
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      volumes:
        - name: data
          emptyDir: {}
        - name: tls
          ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: keycloak-tls-$NAMESPACE
                  secrets.stackable.tech/scope: service=keycloak
              spec:
                storageClassName: secrets.stackable.tech
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: "1"
        - name: realm-volume
          configMap:
            name: keycloak-test-realm
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
{% if test_scenario['values']['oidc-use-tls'] == 'true' %}
    - name: https
      port: 8443
      targetPort: 8443
{% else %}
    - name: http
      port: 8080
      targetPort: 8080
{% endif %}
  selector:
    app: keycloak
