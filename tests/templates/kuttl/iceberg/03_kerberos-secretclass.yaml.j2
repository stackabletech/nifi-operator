apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: kerberos-$NAMESPACE
spec:
  backend:
    kerberosKeytab:
      realmName: {{ test_scenario['values']['kerberos-realm'] }}
      kdc: krb5-kdc.$NAMESPACE.svc.cluster.local
      admin:
        mit:
          kadminServer: krb5-kdc.$NAMESPACE.svc.cluster.local
      adminKeytabSecret:
        namespace: $NAMESPACE
        name: secret-operator-keytab
      adminPrincipal: stackable-secret-operator
---
apiVersion: v1
kind: Secret
metadata:
  name: secret-operator-keytab
data:
  # To create keytab. When promted enter password asdf
  # cat | ktutil << 'EOF'
  # list
  # add_entry -password -p stackable-secret-operator@CLUSTER.LOCAL -k 1 -e aes256-cts-hmac-sha384-192
  # wkt /tmp/keytab
  # EOF
{% if test_scenario['values']['kerberos-realm'] == 'CLUSTER.LOCAL' %}
  keytab: BQIAAABdAAEADUNMVVNURVIuTE9DQUwAGXN0YWNrYWJsZS1zZWNyZXQtb3BlcmF0b3IAAAABZAYWIgEAFAAgm8MCZ8B//XF1tH92GciD6/usWUNAmBTZnZQxLua2TkgAAAAB
{% elif test_scenario['values']['kerberos-realm'] == 'PROD.MYCORP' %}
  keytab: BQIAAABbAAEAC1BST0QuTVlDT1JQABlzdGFja2FibGUtc2VjcmV0LW9wZXJhdG9yAAAAAWQZa0EBABQAIC/EnFNejq/K5lX6tX+B3/tkI13TCzkPB7d2ggCIEzE8AAAAAQ==
{% endif %}
