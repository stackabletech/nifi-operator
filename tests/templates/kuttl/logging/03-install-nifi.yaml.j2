---
apiVersion: v1
kind: Secret
metadata:
  name: nifi-admin-credentials-simple
stringData:
  username: admin
  password: supersecretpassword
---
apiVersion: v1
kind: Secret
metadata:
  name: nifi-sensitive-property-key
stringData:
  nifiSensitivePropsKey: mYsUp3rS3cr3tk3y
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nifi-log-config
data:
  logback.xml: |
    log4j.rootLogger=INFO, FILE
    log4j.appender.FILE=org.apache.log4j.FileAppender
    log4j.appender.FILE.File=/stackable/log/nifi/nifi.log4j.xml
    log4j.appender.FILE.layout=org.apache.log4j.xml.XMLLayout
---
apiVersion: nifi.stackable.tech/v1alpha1
kind: NifiCluster
metadata:
  name: test-nifi
spec:
  image:
    productVersion: "{{ test_scenario['values']['nifi'].split('-stackable')[0] }}"
    stackableVersion: "{{ test_scenario['values']['nifi'].split('-stackable')[1] }}"
  clusterConfig:
    authentication:
      method:
        singleUser:
          adminCredentialsSecret: nifi-admin-credentials-simple
    sensitiveProperties:
      keySecret: nifi-sensitive-property-key
    zookeeperConfigMapName: test-nifi-znode
  nodes:
    roleGroups:
      automatic-log-config:
        replicas: 1
        config:
          logging:
            enableVectorAgent: true
            containers:
              nifi:
                console:
                  level: INFO
                file:
                  level: INFO
                loggers:
                  ROOT:
                    level: INFO
              vector:
                console:
                  level: INFO
                file:
                  level: INFO
                loggers:
                  ROOT:
                    level: INFO
      custom-log-config:
        replicas: 1
        config:
          logging:
            enableVectorAgent: true
            containers:
              nifi:
                custom:
                  configMap: nifi-log-config
